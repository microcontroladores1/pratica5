
ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 1





       MCS-51 Family Macro Assembler   A S E M - 5 1   V 1.3
       =====================================================



	Source File:	pratica5.asm
	Object File:	pratica5.hex
	List File:	pratica5.lst



 Line  I  Addr  Code            Source

    1:				; Pratica 5 : Interface de teclado matricial
    2:				; Programador: Francisco Edno
    3:				;
    4:				; Sistema de Acesso
    5:				;
    6:				; O programa continuamente faz a leitura de um teclado matricial
    7:				; na porta P2 e imprime em um display de 7 segmentos (Como feedback).
    8:				; Apos a confirmacao de ENTER (#) os numeros digitados serao comparados
    9:				; com a senha padrao em tabela, ou com a senha na e2prom. Senha de 4 digitos.
   10:				;
   11:				; O Codigo de interface com teclado matricial e baseado num exemplo do livro
   12:				; do Scott Mackenzie.
   13:				;
   14:				; Teclado matricial:
   15:				; C1: P2.1 | C2: P2.2 | C3: P2.3
   16:				; L1: P2.4 | L2: P2.5 | L3: P2.6 | L4: P2.7
   17:				;
   18:				; Registrador de deslocamento:
   19:				; SHD: P0.0 | SHCK: P0.1 | SHLTCH: P0.2
   20:
   21:				; ****************************************************************************
   22:				; EQUATES
   23:				; ****************************************************************************
   24:
   25:		B      00B0	SHD     equ     p3.0
   26:		B      00B1	SHCK    equ     p3.1
   27:		B      00B2	SHLTCH  equ     p3.2
   28:		B      00B6	MR      equ     p3.6
   29:
   30:		N      0030	USRPSS  equ     30h  ; Senha no endereco 30h
   31:
   32:		B      00B3	LED_OK  equ     p3.3
   33:		B      00B4	LED_LCK equ     p3.4
   34:		B      00B5	BUZZER  equ     p3.5
   35:
   36:				; ****************************************************************************
   37:				; Inicio
   38:				; ****************************************************************************
   39:	  0000	C2 B4		            clr     LED_LCK    ; Fechado por padrao
   40:	  0002	7C 04		Main:       mov     r4, #4     ; Usa r4 como contador
   41:
   42:	  0004	12 00 3A	Loop:       call    KeyIn
   43:	  0007	C2 B6		            clr     MR

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 2



 Line  I  Addr  Code            Source

   44:	  0009	11 81		            acall   Display    ; Imprimo no display o valor do ACC
   45:
   46:	  000B	74 04		            mov     a, #4      ; Peso para calculo do indice
   47:	  000D	C3		            clr     c          ; Caso setada, r4 e subtraido de ACC + C
   48:	  000E	9C		            subb    a, r4      ; Encontro o valor do indice
   49:	  000F	24 30		            add     a, #USRPSS ; Preparo para guardar o valor no vetor
   50:	  0011	F8		            mov     r0, a      ; Coloco o endereco no r0 para acesso indireto
   51:	  0012	A6 F0		            mov     @r0, b     ; Guardo o digito no vetor
   52:
   53:	  0014	DC EE		            djnz    r4, Loop
   54:
   55:	  0016	11 DD		            acall   Delay
   56:	  0018	11 DD		            acall   Delay
   57:	  001A	11 DD		            acall   Delay
   58:	  001C	11 DD		            acall   Delay
   59:
   60:	  001E	D2 B6		            setb    MR
   61:	  0020	11 AC		            acall   CheckPsswd ; Checa se a senha que o usuario entrou esta ok
   62:
   63:	  0022	40 0A		            jc      PassOK     ; Senha correta?
   64:	  0024	C2 B4		            clr     LED_LCK    ; nao: Liga o led indicativo de fechado
   65:	  0026	C2 B5		            clr     BUZZER     ; liga o buzzer
   66:	  0028	11 CF		            acall   BuzzTime   ; Tempo para o buzzer
   67:	  002A	D2 B5		            setb    BUZZER     ; Desliga o Buzzer
   68:	  002C	01 02		            ajmp    Main       ; Volta para o inicio
   69:
   70:	  002E	D2 B4		PassOK:     setb    LED_LCK    ; Desliga o led de fechado
   71:	  0030	C2 B3		            clr     LED_OK     ; Liga o led de ok
   72:	  0032	11 D6		            acall   OKTime     ; Tempo de aberto
   73:	  0034	C2 B4		            clr     LED_LCK    ; Liga o led de fechado
   74:	  0036	D2 B3		            setb    LED_OK     ; Desliga led de ok apos o tempo determinado
   75:
   76:	  0038	01 02		            ajmp    Main
   77:
   78:				; ****************************************************************************
   79:				; SUB-ROTINAS
   80:				; ****************************************************************************
   81:
   82:				; ----------------------------------------------------------------------------
   83:				; KeyIn
   84:				; ----------------------------------------------------------------------------
   85:				; Faz a leitura do teclado com 'Software Debouncing' para o pressionar e o
   86:				; liberar da tecla (50 operacoes para cada). Apenas retorna quando uma tecla
   87:				; for pressionada.
   88:				; Retorna: Codigo da tecla no Registrador B.
   89:				; Usa: GetKey
   90:				; Registradores: r3 (contador)
   91:				; ----------------------------------------------------------------------------
   92:	  003A	7B 32		KeyIn:      mov     r3, #50     ; Contador para o debouncing
   93:	  003C	12 00 51	Back:       call    GetKey      ; Tecla pressionada?
   94:	  003F	50 F9		            jnc     KeyIn       ; Nao: tentar ler denovo (Pode mudar)
   95:	  0041	DB F9		            djnz    r3, Back    ; Sim: repete 50 vezes
   96:	  0043	C0 F0		            push    b           ; Salva o codigo da tecla
   97:
   98:	  0045	7B 32		Back2:      mov     r3, #50     ; Espera a tecla ser liberada novamente
   99:	  0047	12 00 51	Back3:      call    GetKey      ; Tecla pressionada?

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 3



 Line  I  Addr  Code            Source

  100:	  004A	40 F9		            jc      Back2       ; Sim: Cotinue checkando
  101:	  004C	DB F9		            djnz    r3, Back3   ; Nao: Repete 50 vezes
  102:	  004E	D0 F0		            pop     b           ; Recupera o codigo da tecla
  103:	  0050	22		            ret                 ; Retorna
  104:
  105:				; ---------------------------------------------------------------------------
  106:				; GetKey
  107:				; ---------------------------------------------------------------------------
  108:				; Pega o status do teclado
  109:				; Retorna: C = 0 se nenhuma tecla foi pressionada
  110:				;        : C = 1 e o codigo da tecla no Registrador B caso tenha sido
  111:				;          pressionada
  112:				; Registradores: r5, r6, r7
  113:				; ---------------------------------------------------------------------------
  114:	  0051	74 FD		GetKey:     mov     a, #0FDh         ; Comeca com a coluna 0
  115:	  0053	7E 03		            mov     r6, #3           ; Usa R6 como contador
  116:	  0055	F5 A0		Test:       mov     p2, a            ; Ativa uma coluna
  117:	  0057	FF		            mov     r7, a            ; Salva ACC
  118:	  0058	E5 A0		            mov     a, p2            ; Agora leio a porta novamente
  119:	  005A	54 F0		            anl     a, #0F0h         ; Isolo as linhas
  120:	  005C	B4 F0 07	            cjne    a, #0F0h, KeyHit ; Alguma linha ativa?
  121:	  005F	EF		            mov     a, r7            ; Nao: va para a proxima coluna
  122:	  0060	23		            rl      a
  123:	  0061	DE F2		            djnz    r6, Test
  124:	  0063	C3		            clr     c                ; Nenuma tecla pressionada :(
  125:	  0064	80 1A		            sjmp    Exit             ; Retorna com c = 0
  126:
  127:	  0066	FF		KeyHit:     mov     r7, a            ; Salvo em r7 o scan
  128:	  0067	74 04		            mov     a, #4            ; Preparacao para o calculo da coluna
  129:	  0069	C3		            clr     c
  130:	  006A	9E		            subb    a, r6            ; 3 - R6 = numero da coluna (0:3)
  131:	  006B	FE		            mov     r6, a            ; Salvo o numero da coluna em R6
  132:	  006C	EF		            mov     a, r7            ; Restauro o que foi lido da P2
  133:	  006D	C4		            swap    a                ; Boto as linhas no nibble menor
  134:
  135:	  006E	7D 04		            mov     r5, #4
  136:	  0070	13		Again:      rrc     a                ; Rotaciona ate C = 0
  137:	  0071	50 05		            jnc     Done             ; Done quando C = 0
  138:	  0073	0E		            inc     r6
  139:	  0074	0E		            inc     r6
  140:	  0075	0E		            inc     r6
  141:	  0076	DD F8		            djnz    r5, Again
  142:
  143:	  0078	BE 0B 02	Done:       cjne    r6, #0Bh, Done2   ; O codigo = 0Bh (11) ?
  144:	  007B	7E 00		            mov     r6, #0           ; sim: O codigo e o 0
  145:
  146:	  007D	D3		Done2:      setb    c                ; C = 1 (tecla pressionada)
  147:	  007E	8E F0		            mov     b, r6            ; Codigo no Registrador B
  148:	  0080	22		Exit:       ret
  149:
  150:				; ---------------------------------------------------------------------------
  151:				; Display
  152:				; ---------------------------------------------------------------------------
  153:				; Imprime no display de 7 segmentos o digito do registrador B. Caso o valor
  154:				; seja Maior que 9, a rotina faz nada.
  155:				; Registradores: r5

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 4



 Line  I  Addr  Code            Source

  156:				; ---------------------------------------------------------------------------
  157:	  0081	E5 F0		Display:    mov     a, b        ; Boto o valor da tecla no ACC para acessar TAB
  158:	  0083	C0 E0		            push    acc         ; Salvo o ACC
  159:	  0085	24 F6		            add     a, #(not 9) ; Preparo para verificar se ACC > 9
  160:	  0087	D0 E0		            pop     acc         ; Restauro ACC
  161:
  162:	  0089	40 11		            jc      Exit2       ; Acc > 9 ?
  163:
  164:	  008B	11 9D		            acall   LKDisp      ; Nao: Boto a decodificacao do display no ACC
  165:
  166:	  008D	C2 B2		            clr     SHLTCH      ; Trava o registrador
  167:
  168:	  008F	7D 08		            mov     r5, #8      ; Usa r5 como contador
  169:	  0091	A2 E7		Here:       mov     c, acc.7    ; Pego o bit mais significativo do ACC
  170:	  0093	92 B0		            mov     SHD, c      ; Envio para o Shift Register
  171:	  0095	11 E6		            acall   CKPulse     ; Pulso de clock para entrar
  172:	  0097	23		            rl      a           ; Rotaciono para pegar o proximo bit
  173:	  0098	DD F7		            djnz    r5, Here
  174:
  175:	  009A	D2 B2		            setb    SHLTCH      ; Libera o registrador
  176:
  177:	  009C	22		Exit2:      ret
  178:
  179:				; ---------------------------------------------------------------------------
  180:				; LKDisp
  181:				; ---------------------------------------------------------------------------
  182:				; Look-up Table para decodificacao do display de 7 segmentos.
  183:				; Retorna: A decodificacao no acumulador.
  184:				; ---------------------------------------------------------------------------
  185:	  009D	90 00 A2	LKDisp:     mov     dptr, #DECODING ; Passa o endereco da tabela para o dptr
  186:	  00A0	93		            movc    a,@a+dptr       ; Acessa a Tabela
  187:
  188:	  00A1	22		            ret                     ; Retorna com o valor no ACC
  189:
  190:	  00A2	3F 06 5B 4F	DECODING:   db  3Fh, 06h, 5Bh, 4Fh, 66h, 6Dh, 7Dh, 07h, 7Fh, 67h
	  00A6	66 6D 7D 07
	  00AA	7F 67
  191:
  192:				; ---------------------------------------------------------------------------
  193:				; CheckPsswd
  194:				; ---------------------------------------------------------------------------
  195:				; Verifica se a senha que o usuario entrou esta correta. Caso uma senha
  196:				; nao tenha sido fornecida (verifico f0) a rotina retorna C = 0.
  197:				; Retorna: C = 1 caso esteja.
  198:				;        : C = 0 caso nao esteja ou caso nenhuma senha tenha sido fornecida.
  199:				; Registradores: r4, r5
  200:				; ---------------------------------------------------------------------------
  201:	  00AC	7C 04		CheckPsswd: mov     r4, #4     ; usa r4 como contador
  202:	  00AE	74 04		Back7:      mov     a, #4      ; bota o indice no acumulador
  203:	  00B0	C3		            clr     C
  204:	  00B1	9C		            subb    a, r4      ; calcula o indice
  205:	  00B2	C0 E0		            push    acc        ; salva o indice
  206:
  207:	  00B4	24 30		            add     a, #USRPSS ; calcula endereco no vetor
  208:	  00B6	F8		            mov     r0, a      ; salva o endereco da posicao do vetor em r0
  209:	  00B7	86 05		            mov     05h, @r0    ; salva o digito da senha em r5

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 5



 Line  I  Addr  Code            Source

  210:
  211:	  00B9	D0 E0		            pop     acc        ; recupera o indice
  212:	  00BB	11 C6		            acall   LKPsswd    ; pego a senha padrao
  213:
  214:	  00BD	B5 05 04	            cjne    a, 05h, Fail ; digito correto?
  215:	  00C0	DC EC		            djnz    r4, Back7    ; sim: verifica o proximo digito
  216:
  217:	  00C2	D3		            setb    c            ; seta a carry
  218:	  00C3	22		            ret                  ; retorna com C = 1
  219:
  220:	  00C4	C3		Fail:       clr     c
  221:	  00C5	22		            ret                  ; retorna com C = 0
  222:
  223:				; ---------------------------------------------------------------------------
  224:				; LKPsswd
  225:				; ---------------------------------------------------------------------------
  226:				; Look-Up Table para verificacao de senha padrao.
  227:				; ---------------------------------------------------------------------------
  228:	  00C6	90 00 CB	LKPsswd:    mov     dptr, #PASSWD
  229:	  00C9	93		            movc    a, @a+dptr
  230:
  231:	  00CA	22		            ret
  232:
  233:	  00CB	02 06 00 05	PASSWD:     db  2, 6, 0, 5
  234:
  235:				; ---------------------------------------------------------------------------
  236:				; BuzzTime
  237:				; ---------------------------------------------------------------------------
  238:				; Tempo de 1s para o buzzer
  239:				; Registradores: r7
  240:				; ---------------------------------------------------------------------------
  241:	  00CF	7F 0A		BuzzTime:   mov     r7, #10
  242:	  00D1	11 DD		Back5:      acall   Delay     ; Delay de 0.1s
  243:	  00D3	DF FC		            djnz    r7, Back5 ; 10 X 0.1s = 1s
  244:	  00D5	22		            ret
  245:
  246:				; ---------------------------------------------------------------------------
  247:				; OKTime
  248:				; ---------------------------------------------------------------------------
  249:				; Tempo de 2s para liberar a entrada
  250:				; Registradores: r7
  251:				; ---------------------------------------------------------------------------
  252:	  00D6	7F 14		OKTime:     mov     r7, #20   ; R7 como contador
  253:	  00D8	11 DD		Back6:      acall   Delay     ; Delay de 0.1s
  254:	  00DA	DF FC		            djnz    r7, Back6 ; 20 X 0.1s = 2s
  255:	  00DC	22		            ret
  256:
  257:				; ---------------------------------------------------------------------------
  258:				; Delay
  259:				; ---------------------------------------------------------------------------
  260:				; Delay de 0.1s
  261:				; Registradores: r5, r6
  262:				; ---------------------------------------------------------------------------
  263:	  00DD	7D C8		Delay:      mov     r5, #200
  264:	  00DF	7E FA		Back4:      mov     r6, #250
  265:	  00E1	DE FE		            djnz    r6, $

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 6



 Line  I  Addr  Code            Source

  266:	  00E3	DD FA		            djnz    r5, Back4
  267:	  00E5	22		            ret
  268:
  269:				; ---------------------------------------------------------------------------
  270:				; CKPulse
  271:				; ---------------------------------------------------------------------------
  272:				; Pulso de clock no registrador de deslocamento
  273:				; ---------------------------------------------------------------------------
  274:	  00E6	D2 B1		CKPulse:    setb    SHCK
  275:	  00E8	C2 B1		            clr     SHCK
  276:	  00EA	22		            ret
  277:
  278:				; ****************************************************************************
  279:				            end
  280:				; ****************************************************************************





                     register banks used:  ---

                     no errors




ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 7





	       L I S T   O F   S Y M B O L S
	       =============================


SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??ASEM_51			  NUMBER    8051
??VERSION			  NUMBER    0130
AC				  BIT	      D6
ACC				  DATA	      E0
AGAIN				  CODE	    0070	 136
B				  DATA	      F0
BACK				  CODE	    003C	  93
BACK2				  CODE	    0045	  98
BACK3				  CODE	    0047	  99
BACK4				  CODE	    00DF	 264
BACK5				  CODE	    00D1	 242
BACK6				  CODE	    00D8	 253
BACK7				  CODE	    00AE	 202
BUZZER				  NUMBER    00B5	  34
BUZZTIME			  CODE	    00CF	 241
CHECKPSSWD			  CODE	    00AC	 201
CKPULSE				  CODE	    00E6	 274
CY				  BIT	      D7
DECODING			  CODE	    00A2	 190
DELAY				  CODE	    00DD	 263
DISPLAY				  CODE	    0081	 157
DONE				  CODE	    0078	 143
DONE2				  CODE	    007D	 146
DPH				  DATA	      83
DPL				  DATA	      82
EA				  BIT	      AF
ES				  BIT	      AC
ET0				  BIT	      A9
ET1				  BIT	      AB
EX0				  BIT	      A8
EX1				  BIT	      AA
EXIT				  CODE	    0080	 148
EXIT2				  CODE	    009C	 177
EXTI0				  CODE	    0003
EXTI1				  CODE	    0013
F0				  BIT	      D5
FAIL				  CODE	    00C4	 220
GETKEY				  CODE	    0051	 114
HERE				  CODE	    0091	 169
IE				  DATA	      A8
IE0				  BIT	      89
IE1				  BIT	      8B
INT0				  BIT	      B2
INT1				  BIT	      B3
IP				  DATA	      B8
IT0				  BIT	      88
IT1				  BIT	      8A
KEYHIT				  CODE	    0066	 127
KEYIN				  CODE	    003A	  92
LED_LCK				  NUMBER    00B4	  33

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 8



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
LED_OK				  NUMBER    00B3	  32
LKDISP				  CODE	    009D	 185
LKPSSWD				  CODE	    00C6	 228
LOOP				  CODE	    0004	  42
MAIN				  CODE	    0002	  40
MR				  NUMBER    00B6	  28
OKTIME				  CODE	    00D6	 252
OV				  BIT	      D2
P				  BIT	      D0
P0				  DATA	      80
P1				  DATA	      90
P2				  DATA	      A0
P3				  DATA	      B0
PASSOK				  CODE	    002E	  70
PASSWD				  CODE	    00CB	 233
PCON				  DATA	      87
PS				  BIT	      BC
PSW				  DATA	      D0
PT0				  BIT	      B9
PT1				  BIT	      BB
PX0				  BIT	      B8
PX1				  BIT	      BA
RB8				  BIT	      9A
RD				  BIT	      B7
REN				  BIT	      9C
RESET				  CODE	    0000
RI				  BIT	      98
RS0				  BIT	      D3
RS1				  BIT	      D4
RXD				  BIT	      B0
SBUF				  DATA	      99
SCON				  DATA	      98
SHCK				  NUMBER    00B1	  26
SHD				  NUMBER    00B0	  25
SHLTCH				  NUMBER    00B2	  27
SINT				  CODE	    0023
SM0				  BIT	      9F
SM1				  BIT	      9E
SM2				  BIT	      9D
SP				  DATA	      81
T0				  BIT	      B4
T1				  BIT	      B5
TB8				  BIT	      9B
TCON				  DATA	      88
TEST				  CODE	    0055	 116
TF0				  BIT	      8D
TF1				  BIT	      8F
TH0				  DATA	      8C
TH1				  DATA	      8D
TI				  BIT	      99
TIMER0				  CODE	    000B
TIMER1				  CODE	    001B
TL0				  DATA	      8A
TL1				  DATA	      8B
TMOD				  DATA	      89
TR0				  BIT	      8C

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 9



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
TR1				  BIT	      8E
TXD				  BIT	      B1
USRPSS				  NUMBER    0030	  30
WR				  BIT	      B6
