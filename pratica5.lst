
ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 1





       MCS-51 Family Macro Assembler   A S E M - 5 1   V 1.3
       =====================================================



	Source File:	pratica5.asm
	Object File:	pratica5.hex
	List File:	pratica5.lst



 Line  I  Addr  Code            Source

    1:				; Pratica 5 : Interface de teclado matricial
    2:				; Programador: Francisco Edno
    3:				;
    4:				; Sistema de Acesso
    5:				;
    6:				; O programa continuamente faz a leitura de um teclado matricial
    7:				; na porta P2 e imprime em um display de 7 segmentos (Como feedback).
    8:				; Apos a confirmacao de ENTER (#) os numeros digitados serao comparados
    9:				; com a senha padrao em tabela, ou com a senha na e2prom. Senha de 4 digitos.
   10:				;
   11:				; O Codigo de interface com teclado matricial e baseado num exemplo do livro
   12:				; do Scott Mackenzie.
   13:				;
   14:				; Teclado matricial:
   15:				; C1: P2.1 | C2: P2.2 | C3: P2.3
   16:				; L1: P2.4 | L2: P2.5 | L3: P2.6 | L4: P2.7
   17:				;
   18:				; Registrador de deslocamento:
   19:				; SHD: P0.0 | SHCK: P0.1 | SHLTCH: P0.2
   20:
   21:				; ****************************************************************************
   22:				; EQUATES
   23:				; ****************************************************************************
   24:
   25:		B      00B0	SHD     equ     p3.0
   26:		B      00B1	SHCK    equ     p3.1
   27:		B      00B2	SHLTCH  equ     p3.2
   28:
   29:		N      0030	USRPSS  equ     30h  ; Senha no endereco 30h
   30:
   31:		B      00B3	LED_OK  equ     p3.3
   32:		B      00B4	LED_LCK equ     p3.4
   33:		B      00B5	BUZZER  equ     p3.5
   34:
   35:				; ****************************************************************************
   36:				; Inicio
   37:				; ****************************************************************************
   38:	  0000	C2 B4		            clr     LED_LCK    ; Fechado por padrao
   39:	  0002	7C 04		Main:       mov     r4, #4     ; Usa r4 como contador
   40:	  0004	12 00 2F	Loop:       call    KeyIn
   41:	  0007	11 76		            acall   Display    ; Imprimo no display o valor do ACC
   42:
   43:	  0009	74 04		            mov     a, #4      ; Peso para calculo do indice

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 2



 Line  I  Addr  Code            Source

   44:	  000B	9C		            subb    a, r4      ; Encontro o valor do indice
   45:	  000C	24 30		            add     a, #USRPSS ; Preparo para guardar o valor no vetor
   46:	  000E	F8		            mov     r0, a      ; Coloco o endereco no r0 para acesso indireto
   47:	  000F	A6 F0		            mov     @r0, b     ; Guardo o digito no vetor
   48:
   49:	  0011	DC F1		            djnz    r4, Loop
   50:
   51:	  0013	11 A1		            acall   CheckPsswd ; Checa se a senha que o usuario entrou esta ok
   52:
   53:	  0015	40 0A		            jc      PassOK     ; Senha correta?
   54:	  0017	C2 B4		            clr     LED_LCK    ; nao: Liga o led indicativo de fechado
   55:	  0019	C2 B5		            clr     BUZZER     ; liga o buzzer
   56:	  001B	11 AB		            acall   BuzzTime   ; Tempo para o buzzer
   57:	  001D	D2 B5		            setb    BUZZER     ; Desliga o Buzzer
   58:	  001F	01 02		            ajmp    Main       ; Volta para o inicio
   59:
   60:	  0021	D2 B4		PassOK:     setb    LED_LCK    ; Desliga o led de fechado
   61:	  0023	C2 B3		            clr     LED_OK     ; Liga o led de ok
   62:	  0025	11 B2		            acall   OKTime     ; Tempo de aberto
   63:	  0027	C2 B4		            clr     LED_LCK    ; Liga o led de fechado
   64:	  0029	D2 B3		            setb    LED_OK     ; Desliga led de ok apos o tempo determinado
   65:	  002B	D2 D5		            setb    f0         ; Seta a flag f0, informando que o usuario ja
   66:				                               ; entrou com uma senha
   67:
   68:	  002D	01 02		            ajmp    Main
   69:
   70:				; ****************************************************************************
   71:				; SUB-ROTINAS
   72:				; ****************************************************************************
   73:
   74:				; ----------------------------------------------------------------------------
   75:				; KeyIn
   76:				; ----------------------------------------------------------------------------
   77:				; Faz a leitura do teclado com 'Software Debouncing' para o pressionar e o
   78:				; liberar da tecla (50 operacoes para cada). Apenas retorna quando uma tecla
   79:				; for pressionada.
   80:				; Retorna: Codigo da tecla no Registrador B.
   81:				; Usa: GetKey
   82:				; Registradores: r3 (contador)
   83:				; ----------------------------------------------------------------------------
   84:	  002F	7B 32		KeyIn:      mov     r3, #50     ; Contador para o debouncing
   85:	  0031	12 00 46	Back:       call    GetKey      ; Tecla pressionada?
   86:	  0034	50 F9		            jnc     KeyIn       ; Nao: tentar ler denovo (Pode mudar)
   87:	  0036	DB F9		            djnz    r3, Back    ; Sim: repete 50 vezes
   88:	  0038	C0 F0		            push    b           ; Salva o codigo da tecla
   89:
   90:	  003A	7B 32		Back2:      mov     r3, #50     ; Espera a tecla ser liberada novamente
   91:	  003C	12 00 46	Back3:      call    GetKey      ; Tecla pressionada?
   92:	  003F	40 F9		            jc      Back2       ; Sim: Cotinue checkando
   93:	  0041	DB F9		            djnz    r3, Back3   ; Nao: Repete 50 vezes
   94:	  0043	D0 F0		            pop     b           ; Recupera o codigo da tecla
   95:	  0045	22		            ret                 ; Retorna
   96:
   97:				; ---------------------------------------------------------------------------
   98:				; GetKey
   99:				; ---------------------------------------------------------------------------

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 3



 Line  I  Addr  Code            Source

  100:				; Pega o status do teclado
  101:				; Retorna: C = 0 se nenhuma tecla foi pressionada
  102:				;        : C = 1 e o codigo da tecla no Registrador B caso tenha sido
  103:				;          pressionada
  104:				; Registradores: r5, r6, r7
  105:				; ---------------------------------------------------------------------------
  106:	  0046	74 FD		GetKey:     mov     a, #0FDh         ; Comeca com a coluna 0
  107:	  0048	7E 03		            mov     r6, #3           ; Usa R6 como contador
  108:	  004A	F5 A0		Test:       mov     p2, a            ; Ativa uma coluna
  109:	  004C	FF		            mov     r7, a            ; Salva ACC
  110:	  004D	E5 A0		            mov     a, p2            ; Agora leio a porta novamente
  111:	  004F	54 F0		            anl     a, #0F0h         ; Isolo as linhas
  112:	  0051	B4 F0 07	            cjne    a, #0F0h, KeyHit ; Alguma linha ativa?
  113:	  0054	EF		            mov     a, r7            ; Nao: va para a proxima coluna
  114:	  0055	23		            rl      a
  115:	  0056	DE F2		            djnz    r6, Test
  116:	  0058	C3		            clr     c                ; Nenuma tecla pressionada :(
  117:	  0059	80 1A		            sjmp    Exit             ; Retorna com c = 0
  118:
  119:	  005B	FF		KeyHit:     mov     r7, a            ; Salvo em r7 o scan
  120:	  005C	74 04		            mov     a, #4            ; Preparacao para o calculo da coluna
  121:	  005E	C3		            clr     c
  122:	  005F	9E		            subb    a, r6            ; 3 - R6 = numero da coluna (0:3)
  123:	  0060	FE		            mov     r6, a            ; Salvo o numero da coluna em R6
  124:	  0061	EF		            mov     a, r7            ; Restauro o que foi lido da P2
  125:	  0062	C4		            swap    a                ; Boto as linhas no nibble menor
  126:
  127:	  0063	7D 04		            mov     r5, #4
  128:	  0065	13		Again:      rrc     a                ; Rotaciona ate C = 0
  129:	  0066	50 05		            jnc     Done             ; Done quando C = 0
  130:	  0068	0E		            inc     r6
  131:	  0069	0E		            inc     r6
  132:	  006A	0E		            inc     r6
  133:	  006B	DD F8		            djnz    r5, Again
  134:
  135:	  006D	BE 0B 02	Done:       cjne    r6, #0Bh, Done2   ; O codigo = 0Bh (11) ?
  136:	  0070	7E 00		            mov     r6, #0           ; sim: O codigo e o 0
  137:
  138:	  0072	D3		Done2:      setb    c                ; C = 1 (tecla pressionada)
  139:	  0073	8E F0		            mov     b, r6            ; Codigo no Registrador B
  140:	  0075	22		Exit:       ret
  141:
  142:				; ---------------------------------------------------------------------------
  143:				; Display
  144:				; ---------------------------------------------------------------------------
  145:				; Imprime no display de 7 segmentos o digito do registrador B. Caso o valor
  146:				; seja Maior que 9, a rotina faz nada.
  147:				; Registradores: r5
  148:				; ---------------------------------------------------------------------------
  149:	  0076	E5 F0		Display:    mov     a, b        ; Boto o valor da tecla no ACC para acessar TAB
  150:	  0078	C0 E0		            push    acc         ; Salvo o ACC
  151:	  007A	24 F6		            add     a, #(not 9) ; Preparo para verificar se ACC > 9
  152:	  007C	D0 E0		            pop     acc         ; Restauro ACC
  153:
  154:	  007E	40 11		            jc      Exit2       ; Acc > 9 ?
  155:

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 4



 Line  I  Addr  Code            Source

  156:	  0080	11 92		            acall   LKDisp      ; Nao: Boto a decodificacao do display no ACC
  157:
  158:	  0082	C2 B2		            clr     SHLTCH      ; Trava o registrador
  159:
  160:	  0084	7D 08		            mov     r5, #8      ; Usa r5 como contador
  161:	  0086	A2 E7		Here:       mov     c, acc.7    ; Pego o bit mais significativo do ACC
  162:	  0088	92 B0		            mov     SHD, c      ; Envio para o Shift Register
  163:	  008A	11 C2		            acall   CKPulse     ; Pulso de clock para entrar
  164:	  008C	23		            rl      a           ; Rotaciono para pegar o proximo bit
  165:	  008D	DD F7		            djnz    r5, Here
  166:
  167:	  008F	D2 B2		            setb    SHLTCH      ; Libera o registrador
  168:
  169:	  0091	22		Exit2:      ret
  170:
  171:				; ---------------------------------------------------------------------------
  172:				; LKDisp
  173:				; ---------------------------------------------------------------------------
  174:				; Look-up Table para decodificacao do display de 7 segmentos.
  175:				; Retorna: A decodificacao no acumulador.
  176:				; ---------------------------------------------------------------------------
  177:	  0092	90 00 97	LKDisp:     mov     dptr, #DECODING ; Passa o endereco da tabela para o dptr
  178:	  0095	93		            movc    a,@a+dptr       ; Acessa a Tabela
  179:
  180:	  0096	22		            ret                     ; Retorna com o valor no ACC
  181:
  182:	  0097	3F 06 5B 4F	DECODING:   db  3Fh, 06h, 5Bh, 4Fh, 66h, 6Dh, 7Dh, 07h, 7Fh, 67h
	  009B	66 6D 7D 07
	  009F	7F 67
  183:
  184:				; ---------------------------------------------------------------------------
  185:				; CheckPsswd
  186:				; ---------------------------------------------------------------------------
  187:				; Verifica se a senha que o usuario entrou esta correta. Caso uma senha
  188:				; nao tenha sido fornecida (verifico f0) a rotina retorna C = 0.
  189:				; Retorna: C = 1 caso esteja.
  190:				;        : C = 0 caso nao esteja ou caso nenhuma senha tenha sido fornecida.
  191:				; Registradores: r4
  192:				; ---------------------------------------------------------------------------
  193:	  00A1			CheckPsswd:
  194:	  00A1	22		            ret
  195:
  196:				; ---------------------------------------------------------------------------
  197:				; LKPsswd
  198:				; ---------------------------------------------------------------------------
  199:				; Look-Up Table para verificacao de senha padrao.
  200:				; ---------------------------------------------------------------------------
  201:	  00A2	90 00 A7	LKPsswd:    mov     dptr, #PASSWD
  202:	  00A5	93		            movc    a, @a+dptr
  203:
  204:	  00A6	22		            ret
  205:
  206:	  00A7	02 06 00 05	PASSWD:     db  2, 6, 0, 5
  207:
  208:				; ---------------------------------------------------------------------------
  209:				; BuzzTime

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 5



 Line  I  Addr  Code            Source

  210:				; ---------------------------------------------------------------------------
  211:				; Tempo de 1s para o buzzer
  212:				; Registradores: r7
  213:				; ---------------------------------------------------------------------------
  214:	  00AB			BuzzTime:
  215:	  00AB	7F 0A		            mov     r7, #10
  216:	  00AD	11 B9		Back5:      acall   Delay     ; Delay de 0.1s
  217:	  00AF	DF FC		            djnz    r7, Back5 ; 10 X 0.1s = 1s
  218:	  00B1	22		            ret
  219:
  220:				; ---------------------------------------------------------------------------
  221:				; OKTime
  222:				; ---------------------------------------------------------------------------
  223:				; Tempo de 2s para liberar a entrada
  224:				; Registradores: r7
  225:				; ---------------------------------------------------------------------------
  226:	  00B2	7F 14		OKTime:     mov     r7, #20   ; R7 como contador
  227:	  00B4	11 B9		Back6:      acall   Delay     ; Delay de 0.1s
  228:	  00B6	DF FC		            djnz    r7, Back6 ; 20 X 0.1s = 2s
  229:	  00B8	22		            ret
  230:
  231:				; ---------------------------------------------------------------------------
  232:				; Delay
  233:				; ---------------------------------------------------------------------------
  234:				; Delay de 0.1s
  235:				; Registradores: r5, r6
  236:				; ---------------------------------------------------------------------------
  237:	  00B9	7D C8		Delay:      mov     r5, #200
  238:	  00BB	7E FA		Back4:      mov     r6, #250
  239:	  00BD	DE FE		            djnz    r6, $
  240:	  00BF	DD FA		            djnz    r5, Back4
  241:	  00C1	22		            ret
  242:
  243:				; ---------------------------------------------------------------------------
  244:				; CKPulse
  245:				; ---------------------------------------------------------------------------
  246:				; Pulso de clock no registrador de deslocamento
  247:				; ---------------------------------------------------------------------------
  248:	  00C2	D2 B1		CKPulse:    setb    SHCK
  249:	  00C4	C2 B1		            clr     SHCK
  250:	  00C6	22		            ret
  251:
  252:				; ****************************************************************************
  253:				            end
  254:				; ****************************************************************************





                     register banks used:  ---

                     no errors




ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 6





	       L I S T   O F   S Y M B O L S
	       =============================


SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??ASEM_51			  NUMBER    8051
??VERSION			  NUMBER    0130
AC				  BIT	      D6
ACC				  DATA	      E0
AGAIN				  CODE	    0065	 128
B				  DATA	      F0
BACK				  CODE	    0031	  85
BACK2				  CODE	    003A	  90
BACK3				  CODE	    003C	  91
BACK4				  CODE	    00BB	 238
BACK5				  CODE	    00AD	 216
BACK6				  CODE	    00B4	 227
BUZZER				  NUMBER    00B5	  33
BUZZTIME			  CODE	    00AB	 214
CHECKPSSWD			  CODE	    00A1	 193
CKPULSE				  CODE	    00C2	 248
CY				  BIT	      D7
DECODING			  CODE	    0097	 182
DELAY				  CODE	    00B9	 237
DISPLAY				  CODE	    0076	 149
DONE				  CODE	    006D	 135
DONE2				  CODE	    0072	 138
DPH				  DATA	      83
DPL				  DATA	      82
EA				  BIT	      AF
ES				  BIT	      AC
ET0				  BIT	      A9
ET1				  BIT	      AB
EX0				  BIT	      A8
EX1				  BIT	      AA
EXIT				  CODE	    0075	 140
EXIT2				  CODE	    0091	 169
EXTI0				  CODE	    0003
EXTI1				  CODE	    0013
F0				  BIT	      D5
GETKEY				  CODE	    0046	 106
HERE				  CODE	    0086	 161
IE				  DATA	      A8
IE0				  BIT	      89
IE1				  BIT	      8B
INT0				  BIT	      B2
INT1				  BIT	      B3
IP				  DATA	      B8
IT0				  BIT	      88
IT1				  BIT	      8A
KEYHIT				  CODE	    005B	 119
KEYIN				  CODE	    002F	  84
LED_LCK				  NUMBER    00B4	  32
LED_OK				  NUMBER    00B3	  31
LKDISP				  CODE	    0092	 177

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 7



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
LKPSSWD				  CODE	    00A2	 201
LOOP				  CODE	    0004	  40
MAIN				  CODE	    0002	  39
OKTIME				  CODE	    00B2	 226
OV				  BIT	      D2
P				  BIT	      D0
P0				  DATA	      80
P1				  DATA	      90
P2				  DATA	      A0
P3				  DATA	      B0
PASSOK				  CODE	    0021	  60
PASSWD				  CODE	    00A7	 206
PCON				  DATA	      87
PS				  BIT	      BC
PSW				  DATA	      D0
PT0				  BIT	      B9
PT1				  BIT	      BB
PX0				  BIT	      B8
PX1				  BIT	      BA
RB8				  BIT	      9A
RD				  BIT	      B7
REN				  BIT	      9C
RESET				  CODE	    0000
RI				  BIT	      98
RS0				  BIT	      D3
RS1				  BIT	      D4
RXD				  BIT	      B0
SBUF				  DATA	      99
SCON				  DATA	      98
SHCK				  NUMBER    00B1	  26
SHD				  NUMBER    00B0	  25
SHLTCH				  NUMBER    00B2	  27
SINT				  CODE	    0023
SM0				  BIT	      9F
SM1				  BIT	      9E
SM2				  BIT	      9D
SP				  DATA	      81
T0				  BIT	      B4
T1				  BIT	      B5
TB8				  BIT	      9B
TCON				  DATA	      88
TEST				  CODE	    004A	 108
TF0				  BIT	      8D
TF1				  BIT	      8F
TH0				  DATA	      8C
TH1				  DATA	      8D
TI				  BIT	      99
TIMER0				  CODE	    000B
TIMER1				  CODE	    001B
TL0				  DATA	      8A
TL1				  DATA	      8B
TMOD				  DATA	      89
TR0				  BIT	      8C
TR1				  BIT	      8E
TXD				  BIT	      B1
USRPSS				  NUMBER    0030	  29

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 8



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
WR				  BIT	      B6
