
ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 1





       MCS-51 Family Macro Assembler   A S E M - 5 1   V 1.3
       =====================================================



	Source File:	pratica5.asm
	Object File:	pratica5.hex
	List File:	pratica5.lst



 Line  I  Addr  Code            Source

    1:				; Pratica 5 : Interface de teclado matricial
    2:				; Programador: Francisco Edno
    3:				;
    4:				; Sistema de Acesso
    5:				;
    6:				; O programa continuamente faz a leitura de um teclado matricial
    7:				; na porta P2 e imprime em um display de 7 segmentos (Como feedback).
    8:				; Apos a confirmacao de ENTER (#) os numeros digitados serao comparados
    9:				; com a senha padrao em tabela, ou com a senha na e2prom. Senha de 4 digitos.
   10:				;
   11:				; O Codigo de interface com teclado matricial e baseado num exemplo do livro
   12:				; do Scott Mackenzie.
   13:				;
   14:				; Teclado matricial:
   15:				; C1: P2.1 | C2: P2.2 | C3: P2.3
   16:				; L1: P2.4 | L2: P2.5 | L3: P2.6 | L4: P2.7
   17:				;
   18:				; Registrador de deslocamento:
   19:				; SHD: P0.0 | SHCK: P0.1 | SHLTCH: P0.2
   20:
   21:				; ****************************************************************************
   22:				; EQUATES
   23:				; ****************************************************************************
   24:
   25:		B      00B0	SHD     equ     p3.0
   26:		B      00B1	SHCK    equ     p3.1
   27:		B      00B2	SHLTCH  equ     p3.2
   28:
   29:				; ****************************************************************************
   30:				; Inicio
   31:				; ****************************************************************************
   32:	  0000	7C 04		Main:       mov     r4, #4   ; Usa r4 como contador
   33:	  0002	12 00 0B	Loop:       call    KeyIn
   34:	  0005	11 52		            acall   Display  ; Imprimo no display o valor do ACC
   35:	  0007	DC F9		            djnz    r4, Loop
   36:	  0009	01 00		            ajmp    Main
   37:
   38:				; ****************************************************************************
   39:				; SUB-ROTINAS
   40:				; ****************************************************************************
   41:
   42:				; ----------------------------------------------------------------------------
   43:				; KeyIn

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 2



 Line  I  Addr  Code            Source

   44:				; ----------------------------------------------------------------------------
   45:				; Faz a leitura do teclado com 'Software Debouncing' para o pressionar e o
   46:				; liberar da tecla (50 operacoes para cada). Apenas retorna quando uma tecla
   47:				; for pressionada.
   48:				; Retorna: Codigo da tecla no Registrador B.
   49:				; Usa: GetKey
   50:				; Registradores: r3 (contador)
   51:				; ----------------------------------------------------------------------------
   52:	  000B	7B 32		KeyIn:      mov     r3, #50     ; Contador para o debouncing
   53:	  000D	12 00 22	Back:       call    GetKey      ; Tecla pressionada?
   54:	  0010	50 F9		            jnc     KeyIn       ; Nao: tentar ler denovo (Pode mudar)
   55:	  0012	DB F9		            djnz    r3, Back    ; Sim: repete 50 vezes
   56:	  0014	C0 F0		            push    b           ; Salva o codigo da tecla
   57:
   58:	  0016	7B 32		Back2:      mov     r3, #50     ; Espera a tecla ser liberada novamente
   59:	  0018	12 00 22	Back3:      call    GetKey      ; Tecla pressionada?
   60:	  001B	40 F9		            jc      Back2       ; Sim: Cotinue checkando
   61:	  001D	DB F9		            djnz    r3, Back3   ; Nao: Repete 50 vezes
   62:	  001F	D0 F0		            pop     b           ; Recupera o codigo da tecla
   63:	  0021	22		            ret                 ; Retorna
   64:
   65:				; ---------------------------------------------------------------------------
   66:				; GetKey
   67:				; ---------------------------------------------------------------------------
   68:				; Pega o status do teclado
   69:				; Retorna: C = 0 se nenhuma tecla foi pressionada
   70:				;        : C = 1 e o codigo da tecla no Registrador B caso tenha sido
   71:				;          pressionada
   72:				; Registradores: r5, r6, r7
   73:				; ---------------------------------------------------------------------------
   74:	  0022	74 FD		GetKey:     mov     a, #0FDh         ; Comeca com a coluna 0
   75:	  0024	7E 03		            mov     r6, #3           ; Usa R6 como contador
   76:	  0026	F5 A0		Test:       mov     p2, a            ; Ativa uma coluna
   77:	  0028	FF		            mov     r7, a            ; Salva ACC
   78:	  0029	E5 A0		            mov     a, p2            ; Agora leio a porta novamente
   79:	  002B	54 F0		            anl     a, #0F0h         ; Isolo as linhas
   80:	  002D	B4 F0 07	            cjne    a, #0F0h, KeyHit ; Alguma linha ativa?
   81:	  0030	EF		            mov     a, r7            ; Nao: va para a proxima coluna
   82:	  0031	23		            rl      a
   83:	  0032	DE F2		            djnz    r6, Test
   84:	  0034	C3		            clr     c                ; Nenuma tecla pressionada :(
   85:	  0035	80 1A		            sjmp    Exit             ; Retorna com c = 0
   86:
   87:	  0037	FF		KeyHit:     mov     r7, a            ; Salvo em r7 o scan
   88:	  0038	74 04		            mov     a, #4            ; Preparacao para o calculo da coluna
   89:	  003A	C3		            clr     c
   90:	  003B	9E		            subb    a, r6            ; 3 - R6 = numero da coluna (0:3)
   91:	  003C	FE		            mov     r6, a            ; Salvo o numero da coluna em R6
   92:	  003D	EF		            mov     a, r7            ; Restauro o que foi lido da P2
   93:	  003E	C4		            swap    a                ; Boto as linhas no nibble menor
   94:
   95:	  003F	7D 04		            mov     r5, #4
   96:	  0041	13		Again:      rrc     a                ; Rotaciona ate C = 0
   97:	  0042	50 05		            jnc     Done             ; Done quando C = 0
   98:	  0044	0E		            inc     r6
   99:	  0045	0E		            inc     r6

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 3



 Line  I  Addr  Code            Source

  100:	  0046	0E		            inc     r6
  101:	  0047	DD F8		            djnz    r5, Again
  102:
  103:	  0049	BE 0B 02	Done:       cjne    r6, #0Bh, Done2   ; O codigo = 0Bh (11) ?
  104:	  004C	7E 00		            mov     r6, #0           ; sim: O codigo e o 0
  105:
  106:	  004E	D3		Done2:      setb    c                ; C = 1 (tecla pressionada)
  107:	  004F	8E F0		            mov     b, r6            ; Codigo no Registrador B
  108:	  0051	22		Exit:       ret
  109:
  110:				; ---------------------------------------------------------------------------
  111:				; Display
  112:				; ---------------------------------------------------------------------------
  113:				; Imprime no display de 7 segmentos o digito do registrador B. Caso o valor
  114:				; seja Maior que 9, a rotina faz nada.
  115:				; Registradores: r5
  116:				; ---------------------------------------------------------------------------
  117:	  0052	E5 F0		Display:    mov     a, b        ; Boto o valor da tecla no ACC para acessar TAB
  118:	  0054	C0 E0		            push    acc         ; Salvo o ACC
  119:	  0056	24 F6		            add     a, #(not 9) ; Preparo para verificar se ACC > 9
  120:	  0058	D0 E0		            pop     acc         ; Restauro ACC
  121:
  122:	  005A	40 11		            jc      Exit2       ; Acc > 9 ?
  123:
  124:	  005C	11 6E		            acall   LKDisp      ; Nao: Boto a decodificacao do display no ACC
  125:
  126:	  005E	C2 B2		            clr     SHLTCH      ; Trava o registrador
  127:
  128:	  0060	7D 08		            mov     r5, #8      ; Usa r5 como contador
  129:	  0062	A2 E7		Here:       mov     c, acc.7    ; Pego o bit mais significativo do ACC
  130:	  0064	92 B0		            mov     SHD, c      ; Envio para o Shift Register
  131:	  0066	11 86		            acall   CKPulse     ; Pulso de clock para entrar
  132:	  0068	23		            rl      a           ; Rotaciono para pegar o proximo bit
  133:	  0069	DD F7		            djnz    r5, Here
  134:
  135:	  006B	D2 B2		            setb    SHLTCH      ; Libera o registrador
  136:
  137:	  006D	22		Exit2:      ret
  138:
  139:				; ---------------------------------------------------------------------------
  140:				; LKDisp
  141:				; ---------------------------------------------------------------------------
  142:				; Look-up Table para decodificacao do display de 7 segmentos.
  143:				; Retorna: A decodificacao no acumulador.
  144:				; ---------------------------------------------------------------------------
  145:	  006E	90 00 73	LKDisp:     mov     dptr, #DECODING ; Passa o endereco da tabela para o dptr
  146:	  0071	93		            movc    a,@a+dptr       ; Acessa a Tabela
  147:
  148:	  0072	22		            ret                     ; Retorna com o valor no ACC
  149:
  150:	  0073	3F 06 5B 4F	DECODING:   db  3Fh, 06h, 5Bh, 4Fh, 66h, 6Dh, 7Dh, 07h, 7Fh, 67h
	  0077	66 6D 7D 07
	  007B	7F 67
  151:
  152:				; ---------------------------------------------------------------------------
  153:				; LKPsswd

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 4



 Line  I  Addr  Code            Source

  154:				; ---------------------------------------------------------------------------
  155:				; Look-up Table para a senha padrao.
  156:				; Retorna: A senha no ACC.
  157:				; ---------------------------------------------------------------------------
  158:	  007D	90 00 82	LKPsswd:    mov     dptr, #PASSWD ; Passa o endereco da tabela para o dptr
  159:	  0080	93		            movc    a,@a+dptr     ; Acessa a tabela
  160:
  161:	  0081	22		            ret                   ; Retorna com o valor no ACC
  162:
  163:	  0082	02 06 00 05	PASSWD:     db  2, 6, 0, 5
  164:
  165:				; ---------------------------------------------------------------------------
  166:				; CKPulse
  167:				; ---------------------------------------------------------------------------
  168:				; Pulso de clock no registrador de deslocamento
  169:				; ---------------------------------------------------------------------------
  170:	  0086	D2 B1		CKPulse:    setb    SHCK
  171:	  0088	C2 B1		            clr     SHCK
  172:	  008A	22		            ret
  173:
  174:				; ****************************************************************************
  175:				            end
  176:				; ****************************************************************************





                     register banks used:  ---

                     no errors




ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 5





	       L I S T   O F   S Y M B O L S
	       =============================


SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??ASEM_51			  NUMBER    8051
??VERSION			  NUMBER    0130
AC				  BIT	      D6
ACC				  DATA	      E0
AGAIN				  CODE	    0041	  96
B				  DATA	      F0
BACK				  CODE	    000D	  53
BACK2				  CODE	    0016	  58
BACK3				  CODE	    0018	  59
CKPULSE				  CODE	    0086	 170
CY				  BIT	      D7
DECODING			  CODE	    0073	 150
DISPLAY				  CODE	    0052	 117
DONE				  CODE	    0049	 103
DONE2				  CODE	    004E	 106
DPH				  DATA	      83
DPL				  DATA	      82
EA				  BIT	      AF
ES				  BIT	      AC
ET0				  BIT	      A9
ET1				  BIT	      AB
EX0				  BIT	      A8
EX1				  BIT	      AA
EXIT				  CODE	    0051	 108
EXIT2				  CODE	    006D	 137
EXTI0				  CODE	    0003
EXTI1				  CODE	    0013
F0				  BIT	      D5
GETKEY				  CODE	    0022	  74
HERE				  CODE	    0062	 129
IE				  DATA	      A8
IE0				  BIT	      89
IE1				  BIT	      8B
INT0				  BIT	      B2
INT1				  BIT	      B3
IP				  DATA	      B8
IT0				  BIT	      88
IT1				  BIT	      8A
KEYHIT				  CODE	    0037	  87
KEYIN				  CODE	    000B	  52
LKDISP				  CODE	    006E	 145
LKPSSWD				  CODE	    007D	 158
LOOP				  CODE	    0002	  33
MAIN				  CODE	    0000	  32
OV				  BIT	      D2
P				  BIT	      D0
P0				  DATA	      80
P1				  DATA	      90
P2				  DATA	      A0
P3				  DATA	      B0

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 6



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
PASSWD				  CODE	    0082	 163
PCON				  DATA	      87
PS				  BIT	      BC
PSW				  DATA	      D0
PT0				  BIT	      B9
PT1				  BIT	      BB
PX0				  BIT	      B8
PX1				  BIT	      BA
RB8				  BIT	      9A
RD				  BIT	      B7
REN				  BIT	      9C
RESET				  CODE	    0000
RI				  BIT	      98
RS0				  BIT	      D3
RS1				  BIT	      D4
RXD				  BIT	      B0
SBUF				  DATA	      99
SCON				  DATA	      98
SHCK				  NUMBER    00B1	  26
SHD				  NUMBER    00B0	  25
SHLTCH				  NUMBER    00B2	  27
SINT				  CODE	    0023
SM0				  BIT	      9F
SM1				  BIT	      9E
SM2				  BIT	      9D
SP				  DATA	      81
T0				  BIT	      B4
T1				  BIT	      B5
TB8				  BIT	      9B
TCON				  DATA	      88
TEST				  CODE	    0026	  76
TF0				  BIT	      8D
TF1				  BIT	      8F
TH0				  DATA	      8C
TH1				  DATA	      8D
TI				  BIT	      99
TIMER0				  CODE	    000B
TIMER1				  CODE	    001B
TL0				  DATA	      8A
TL1				  DATA	      8B
TMOD				  DATA	      89
TR0				  BIT	      8C
TR1				  BIT	      8E
TXD				  BIT	      B1
WR				  BIT	      B6
